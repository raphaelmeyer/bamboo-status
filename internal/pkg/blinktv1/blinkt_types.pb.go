// Code generated by protoc-gen-go. DO NOT EDIT.
// source: blinkt_types.proto

package blinktv1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// LED brightness level.
type Brightness int32

const (
	Brightness_BRIGHTNESS_INVALID Brightness = 0
	Brightness_BRIGHTNESS_OFF     Brightness = 1
	Brightness_BRIGHTNESS_LOW     Brightness = 2
	Brightness_BRIGHTNESS_MEDIUM  Brightness = 3
	Brightness_BRIGHTNESS_BRIGHT  Brightness = 4
	Brightness_BRIGHTNESS_MAXIMUM Brightness = 5
)

var Brightness_name = map[int32]string{
	0: "BRIGHTNESS_INVALID",
	1: "BRIGHTNESS_OFF",
	2: "BRIGHTNESS_LOW",
	3: "BRIGHTNESS_MEDIUM",
	4: "BRIGHTNESS_BRIGHT",
	5: "BRIGHTNESS_MAXIMUM",
}

var Brightness_value = map[string]int32{
	"BRIGHTNESS_INVALID": 0,
	"BRIGHTNESS_OFF":     1,
	"BRIGHTNESS_LOW":     2,
	"BRIGHTNESS_MEDIUM":  3,
	"BRIGHTNESS_BRIGHT":  4,
	"BRIGHTNESS_MAXIMUM": 5,
}

func (x Brightness) String() string {
	return proto.EnumName(Brightness_name, int32(x))
}

func (Brightness) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9942548dde8bda24, []int{0}
}

// Result of a request.
type Result int32

const (
	Result_RESULT_INVALID Result = 0
	Result_RESULT_FAILURE Result = 1
	Result_RESULT_SUCCESS Result = 2
)

var Result_name = map[int32]string{
	0: "RESULT_INVALID",
	1: "RESULT_FAILURE",
	2: "RESULT_SUCCESS",
}

var Result_value = map[string]int32{
	"RESULT_INVALID": 0,
	"RESULT_FAILURE": 1,
	"RESULT_SUCCESS": 2,
}

func (x Result) String() string {
	return proto.EnumName(Result_name, int32(x))
}

func (Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9942548dde8bda24, []int{1}
}

// RGB values that represent an LEDs color.
type Color struct {
	R                    uint32   `protobuf:"varint,1,opt,name=r,proto3" json:"r,omitempty"`
	G                    uint32   `protobuf:"varint,2,opt,name=g,proto3" json:"g,omitempty"`
	B                    uint32   `protobuf:"varint,3,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Color) Reset()         { *m = Color{} }
func (m *Color) String() string { return proto.CompactTextString(m) }
func (*Color) ProtoMessage()    {}
func (*Color) Descriptor() ([]byte, []int) {
	return fileDescriptor_9942548dde8bda24, []int{0}
}

func (m *Color) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Color.Unmarshal(m, b)
}
func (m *Color) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Color.Marshal(b, m, deterministic)
}
func (m *Color) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Color.Merge(m, src)
}
func (m *Color) XXX_Size() int {
	return xxx_messageInfo_Color.Size(m)
}
func (m *Color) XXX_DiscardUnknown() {
	xxx_messageInfo_Color.DiscardUnknown(m)
}

var xxx_messageInfo_Color proto.InternalMessageInfo

func (m *Color) GetR() uint32 {
	if m != nil {
		return m.R
	}
	return 0
}

func (m *Color) GetG() uint32 {
	if m != nil {
		return m.G
	}
	return 0
}

func (m *Color) GetB() uint32 {
	if m != nil {
		return m.B
	}
	return 0
}

func init() {
	proto.RegisterEnum("blinkt.v1.Brightness", Brightness_name, Brightness_value)
	proto.RegisterEnum("blinkt.v1.Result", Result_name, Result_value)
	proto.RegisterType((*Color)(nil), "blinkt.v1.Color")
}

func init() { proto.RegisterFile("blinkt_types.proto", fileDescriptor_9942548dde8bda24) }

var fileDescriptor_9942548dde8bda24 = []byte{
	// 268 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4a, 0xca, 0xc9, 0xcc,
	0xcb, 0x2e, 0x89, 0x2f, 0xa9, 0x2c, 0x48, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
	0x84, 0x88, 0xe9, 0x95, 0x19, 0x2a, 0x19, 0x72, 0xb1, 0x3a, 0xe7, 0xe7, 0xe4, 0x17, 0x09, 0xf1,
	0x70, 0x31, 0x16, 0x49, 0x30, 0x2a, 0x30, 0x6a, 0xf0, 0x06, 0x31, 0x82, 0x79, 0xe9, 0x12, 0x4c,
	0x10, 0x5e, 0x3a, 0x88, 0x97, 0x24, 0xc1, 0x0c, 0xe1, 0x25, 0x69, 0x4d, 0x62, 0xe4, 0xe2, 0x72,
	0x2a, 0xca, 0x4c, 0xcf, 0x28, 0xc9, 0x4b, 0x2d, 0x2e, 0x16, 0x12, 0xe3, 0x12, 0x72, 0x0a, 0xf2,
	0x74, 0xf7, 0x08, 0xf1, 0x73, 0x0d, 0x0e, 0x8e, 0xf7, 0xf4, 0x0b, 0x73, 0xf4, 0xf1, 0x74, 0x11,
	0x60, 0x10, 0x12, 0xe2, 0xe2, 0x43, 0x12, 0xf7, 0x77, 0x73, 0x13, 0x60, 0x44, 0x13, 0xf3, 0xf1,
	0x0f, 0x17, 0x60, 0x12, 0x12, 0xe5, 0x12, 0x44, 0x12, 0xf3, 0x75, 0x75, 0xf1, 0x0c, 0xf5, 0x15,
	0x60, 0x46, 0x13, 0x86, 0x30, 0x05, 0x58, 0xd0, 0x6c, 0xf3, 0x75, 0x8c, 0xf0, 0xf4, 0x0d, 0xf5,
	0x15, 0x60, 0xd5, 0x72, 0xe1, 0x62, 0x0b, 0x4a, 0x2d, 0x2e, 0xcd, 0x29, 0x01, 0xd9, 0x11, 0xe4,
	0x1a, 0x1c, 0xea, 0x13, 0x82, 0xea, 0x16, 0xa8, 0x98, 0x9b, 0xa3, 0xa7, 0x4f, 0x68, 0x90, 0x2b,
	0xc4, 0x2d, 0x50, 0xb1, 0xe0, 0x50, 0x67, 0x67, 0xd7, 0xe0, 0x60, 0x01, 0x26, 0x27, 0x7b, 0x2e,
	0xde, 0xe4, 0xfc, 0x5c, 0x3d, 0x78, 0xf0, 0x38, 0x09, 0x38, 0x81, 0x99, 0x21, 0xa0, 0xc0, 0x0b,
	0x00, 0x85, 0x5d, 0x00, 0x63, 0x14, 0x07, 0x44, 0xba, 0xcc, 0x70, 0x11, 0x13, 0xb3, 0x53, 0x44,
	0xc4, 0x2a, 0x26, 0x4e, 0x88, 0x22, 0xbd, 0x30, 0xc3, 0x24, 0x36, 0x70, 0x00, 0x1b, 0x03, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x6d, 0x48, 0x65, 0x7f, 0x76, 0x01, 0x00, 0x00,
}
